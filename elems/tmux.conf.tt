# ─────────────────────────────────────────────────────────────────────────────┐
#                                                                              │
# File informations:                                                           │
# - Name:    elems/tmux.conf.tt                                                │
# - Summary: The TMux configuration.                                           │
# - Authors:                                                                   │
#   - Alessandro Molari <molari.alessandro@gmail.com> (alem0lars)              │
# - Contributors:                                                              │
#   - Luca Molari <molari.luca@gmail.com> (LMolr)                              │
#                                                                              │
# Project informations:                                                        │
#   - Homepage:        https://github.com/alem0lars/configs-tmux               │
#   - Getting started: see README.md in the project root folder                │
#                                                                              │
# License: Apache v2.0 (see below)                                             │
#                                                                              │
# ─────────────────────────────────────────────────────────────────────────────┤
#                                                                              │
# Licensed to the Apache Software Foundation (ASF) under one more contributor  │
# license agreements.  See the NOTICE file distributed with this work for      │
# additional information regarding copyright ownership. The ASF licenses this  │
# file to you under the Apache License, Version 2.0 (the "License"); you may   │
# not use this file except in compliance with the License.                     │
# You may obtain a copy of the License at                                      │
#                                                                              │
#   http://www.apache.org/licenses/LICENSE-2.0                                 │
#                                                                              │
# Unless required by applicable law or agreed to in writing, software          │
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT    │
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.             │
# See the License for the specific language governing permissions and          │
# limitations under the License.                                               │
#                                                                              │
# ─────────────────────────────────────────────────────────────────────────────┤
<% define_locals do
  variable :"tpm.dir", as: :tpm_dir
  variable :'tmux.keys', as: :keys
  variable :'tmux.keys.clear_scrollback', as: :key_clear_scrollback

  variable :'tmux.keys.layout.next', as: :key_layout_next

  variable :'tmux.keys.window.new',    as: :key_window_new
  variable :'tmux.keys.window.choose', as: :key_window_choose
  variable :'tmux.keys.window.kill',   as: :key_window_kill

  variable :'tmux.keys.session.new', as: :key_session_new
  variable :'tmux.keys.session.detach', as: :key_session_detach
  variable :'tmux.keys.session.rename', as: :key_session_rename
  variable :'tmux.keys.session.go.next', as: :key_session_go_next
  variable :'tmux.keys.session.go.prev', as: :key_session_go_prev

  variable :'tmux.keys.pane.swap.up',    as: :key_pane_swap_up
  variable :'tmux.keys.pane.swap.down',  as: :key_pane_swap_down
  variable :'tmux.keys.pane.swap.left',  as: :key_pane_swap_left
  variable :'tmux.keys.pane.swap.right', as: :key_pane_swap_right

  variable :'tmux.keys.pane.resize.up',    as: :key_pane_resize_up
  variable :'tmux.keys.pane.resize.down',  as: :key_pane_resize_down
  variable :'tmux.keys.pane.resize.left',  as: :key_pane_resize_left
  variable :'tmux.keys.pane.resize.right', as: :key_pane_resize_right

  variable :'tmux.keys.pane.split.horizontal.upper', as: :key_pane_split_horizontal_upper
  variable :'tmux.keys.pane.split.horizontal.lower', as: :key_pane_split_horizontal_lower
  variable :'tmux.keys.pane.split.vertical.left',    as: :key_pane_split_vertical_left
  variable :'tmux.keys.pane.split.vertical.right',   as: :key_pane_split_vertical_right

  variable :'tmux.keys.pane.go.up',    as: :key_pane_go_up
  variable :'tmux.keys.pane.go.down',  as: :key_pane_go_down
  variable :'tmux.keys.pane.go.left',  as: :key_pane_go_left
  variable :'tmux.keys.pane.go.right', as: :key_pane_go_right

  variable :'tmux.keys.status_toggle', as: :key_status_toggle
end %>
# ─────────────────────────────────────────────────────────────────────────────┘


# ──────────────────────────────────────────────────────── Plugins (declare) ──┐

<% if has_feature? :tpm %>

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'NHDaly/tmux-better-mouse-mode'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-urlview'
set -g @plugin 'tmux-plugins/tmux-logging'
set -g @plugin 'tmux-plugins/tmux-sessionist'

<% end %>

# ──────────────────────────────────────────────────────────────── Variables ──┤

TMUX_VERSION_MAJOR="`tmux -V | cut -d '.' -f 1 | sed 's|[^0-9]||g'`"
TMUX_VERSION_MINOR="`tmux -V | cut -d '.' -f 2 | sed 's|[^0-9]||g'`"
TMUX_VERSION=${TMUX_VERSION_MAJOR}${TMUX_VERSION_MINOR}

# ───────────────────────────────────────────────────────────────────── Misc ──┤

set -g default-terminal "st-256color"

# ────────────────────────────────────────────────────────────────── Windows ──┤

# Start indexes from 1 instead of 0, for typing accessibility.
set -g base-index      1
set -g pane-base-index 1

# Automatic window numbers reordering.
set-option -g renumber-windows on

# Directly expose pane titles.
set -g set-titles on
set -g set-titles-string '#h ● #S → #I: #W'

# ───────────────────────────────────────────────────────────────── Activity ──┤

# Monitor for activity in the window.
setw -g monitor-activity on

# Windows with activity are highlighted in the status line.
set  -g visual-activity  on

# ───────────────────────────────────────────────────────────────── Keyboard ──┤

# Set the time in milliseconds for which tmux waits after an escape is input to
# determine if it is part of a function or meta key sequences.
set -g escape-time 16

# Allow multiple commands to be entered without pressing the prefix-key again in
# the specified time milliseconds.
set -g repeat-time 128

# ──────────────────────────────────────────────────────────────────── Mouse ──┤

set -g mouse on

unbind -T copy-mode MouseDragEnd1Pane
unbind -T copy-mode-vi MouseDragEnd1Pane

# ──────────────────────────────────────────────────────── Hotkeys (general) ──┤

# Generate xterm-style function key sequences; these have a number included to
# indicate modifiers such as Shift, Alt or Ctrl. The default is off.
setw -g xterm-keys on

# Enable vi-mode.
set -wg mode-keys vi

# ───────────────────────────────────────────────────────── Hotkeys (prefix) ──┤

# Change prefix from <C-b> to <C-a>.
set -g prefix C-a

# <C-b>: Nested prefix.
bind -n C-b send-prefix

# ─────────────────────────────────────────────────────────── Hotkeys (copy) ──┤

bind -T copy-mode-vi 'v' send-keys -X begin-selection
bind -T copy-mode-vi 'y' send-keys -X copy-selection
bind -T copy-mode-vi 'r' send-keys -X rectangle-toggle

# ──────────────────────────────────────────────────────── Hotkeys (history) ──┤

# Clear scroll-back and buffer history.
bind -n <%= local! :key_clear_scrollback %> send-keys <%= local! :key_clear_scrollback %> \; run 'sleep 0.2' \; clear-history

# ───────────────────────────────────────────────────────── Hotkeys (layout) ──┤

# Switch to next layout.
bind <%= local! :key_layout_next %> next-layout

# ──────────────────────────────────────────────────────── Hotkeys (windows) ──┤

# Create a new window.
bind <%= local! :key_window_new %> new-window -c "#{pane_current_path}"

# Choose a window from the all of the windows (also in other sessions).
bind <%= local! :key_window_choose %> choose-tree

# Kill the window (asking confirmation).
bind <%= local! :key_window_kill %> confirm kill-window

# ─────────────────────────────────────────────────────── Hotkeys (sessions) ──┤

# Start a new session.
bind <%= local! :key_session_new %> new-session
# Switch to the next session.
bind <%= local! :key_session_go_next %> switch-client -n \; refresh-client -S
# Switch to the previous session.
bind <%= local! :key_session_go_prev %> switch-client -p \; refresh-client -S
# Detach from the current session.
bind <%= local! :key_session_detach %> detach
# Rename the current session.
bind <%= local! :key_session_rename %> command-prompt -I "#S" "rename-session '%%'"

# ────────────────────────────────────────────────────────── Hotkeys (panes) ──┤

bind <%= local! :key_pane_swap_up %> swap-pane -U
bind <%= local! :key_pane_swap_down %> swap-pane -D
bind <%= local! :key_pane_swap_left %> swap-pane -U
bind <%= local! :key_pane_swap_right %> swap-pane -D

bind <%= local! :key_pane_resize_up %> resize-pane -U 4
bind <%= local! :key_pane_resize_down %> resize-pane -D 4
bind <%= local! :key_pane_resize_left %> resize-pane -L 6
bind <%= local! :key_pane_resize_right %> resize-pane -R 6

# Split window horizontally creating a new lower pane.
bind <%= local! :key_pane_split_horizontal_lower %> split-window -v -p 33 -c "#{pane_current_path}"

# Split window horizontally creating a new upper pane.
bind <%= local! :key_pane_split_horizontal_upper %> split-window -v -p 33 -c "#{pane_current_path}"\; swap-pane -U

# Split window vertically creating a new right pane.
bind <%= local! :key_pane_split_vertical_right %> split-window -h -p 33 -c "#{pane_current_path}"

# Split window vertically creating a new left pane.
bind <%= local! :key_pane_split_vertical_left %> split-window -h -p 33 -c "#{pane_current_path}"\; swap-pane -U

# Pane traversal.
bind <%= local! :key_pane_go_up %> select-pane -U
bind <%= local! :key_pane_go_down %> select-pane -D
bind <%= local! :key_pane_go_left %> select-pane -L
bind <%= local! :key_pane_go_right %> select-pane -R

# <Prefix> <Up>, <Prefix> <Down>, <Prefix> <Left>, <Prefix> <Right>:
#   Fallback for weird situations.
bind Up    select-pane -U
bind Down  select-pane -D
bind Left  select-pane -L
bind Right select-pane -R

# ───────────────────────────────────────────────────────── Hotkeys (status) ──┤

# Toggle status bar.
bind <%= local! :key_status_toggle %> set -g status

# ─────────────────────────────────────────────────────────────────── Colors ──┤

set -g status-bg 'colour233'
set -g status-justify 'left'
set -g status-left-length '100'
set -g status-left-attr 'none'
set -g status-right-length '100'
set -g status-right-attr 'none'
set -g status-attr 'none'

setw -g window-status-fg 'colour240'
setw -g window-status-attr 'none'
setw -g window-status-activity-bg 'colour233'
setw -g window-status-activity-attr 'none'
setw -g window-status-activity-fg 'colour25'
setw -g window-status-separator ""
setw -g window-status-bg 'colour233'

set -g pane-border-fg 'colour236'
set -g pane-active-border-fg 'colour25'

set -g message-bg 'colour236'
set -g message-command-fg 'colour145'
set -g message-fg 'colour145'
set -g message-command-bg 'colour236'

# ─────────────────────────────────────────────────────────────────── Status ──┤

set -g status on

set -g status-left '#[fg=colour195,bg=colour25,bold] #S #[fg=colour25,bg=colour233,nobold,nounderscore,noitalics]'
set -g status-right '#[fg=colour233,bg=colour233,nobold,nounderscore,noitalics]#[fg=colour240,bg=colour233] #(tmux-mem-cpu-load 2) '
setw -g window-status-format '#[fg=colour233,bg=colour233,nobold,nounderscore,noitalics]#[default] #I:#W #[fg=colour233,bg=colour233,nobold,nounderscore,noitalics]'
setw -g window-status-current-format '#[fg=colour233,bg=colour236,nobold,nounderscore,noitalics]#[fg=colour145,bg=colour236] #I:#W #[fg=colour236,bg=colour233,nobold,nounderscore,noitalics]'

# ───────────────────────────────────────── Tmux Better Mouse Mode ← Plugins ──┤

<% if has_feature? :tpm %>

# Settings for `NHDaly/tmux-better-mouse-mode`.
set -g @scroll-down-exit-copy-mode off
set -g @scroll-without-changing-pane on
set -g @scroll-in-moused-over-pane on
set -g @emulate-scroll-for-no-mouse-alternate-buffer on

# Settings for `tmux-plugins/tmux-yank`.
set -g @shell_mode 'vi'

<% end %>

# ──────────────────────────────────────────────────────────── Plugins (run) ──┤

<% if has_feature? :tpm %>
run '<%= local! :tpm_dir %>/tpm'
<% end %>

# └────────────────────────────────────────────────────────────────────────────┘


# vim: set filetype=eruby.tmux :
